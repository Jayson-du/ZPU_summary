@startuml

title "LLVM New PassManger.h文件包含类型分析"

top to bottom direction

skinparam groupInheritance 2

' **********
' 类定义
' **********
struct AnalysisKey{
PASS ID
}

struct AnalysisSetKey {
PASS集合ID
}

' together {

'   class AllAnalysesOn {
'     {static} +ID(): AnalysisKey
'     {static} -SetKey
'   }

'   class CFGAnalyses {
'     {static} + ID(): AnalysisKey
'     {static} - SetKey
'   }

' }

together {

  class PreservedAnalyses {
    {static} +none(): PreservedAnalyses
    {static} +all(): PreservedAnalyses
    +preserve(): void
    +preserveSet(): void
    +abandon(): void
    +intersect(PreservedAnalyses &): void
  }

  class PreservedAnalysisChecker {
    - PreservedAnalyses PA
    - AnalysisKey ID
    - bool IsAbandoned
    + perserved(): bool
    + preservedWhenStateless(): bool
    {static} - AnalysisSetKey AllAnalysesKey
  }
}

together {
  Interface AnalysisManager {
    - AnalysisPasses: DenseMap
    ----
    + registerPass(): bool
  }

  ' note left of AnalysisManager::AnalysisPasses
  '   以Analysis::ID为key, 存贮Analysis类型的Pass
  ' end note

  ' note left of AnalysisManager::registerPass
  '   注册Analysis类型的Pass到AnalysisPasses中
  ' end note


  class TAnalysisManager_F<Functio> {
    AnalysisManager<Function>

  }

  class TAnalysisManager_M<Module> {
    AnalysisManager<Module>

  }

}

together {


  Interface PassInfoMixin {
    templat<T> PassInfoMixin
    {static} +name(): void
    + printPipeline(): void
  }

  struct TPassInfoMixin<AnalysisInfoMixin> {
    {static} + ID():
  }

  note left of TPassInfoMixin
    为所有Analysis类型的pass提供基类,
    使用New PM的Analysis类型Pass使用
    CRTP技术来实现
  end note

  class TAnalysisInfoMixin<PassInstrumentationAnalysis> {
    一个分析类型的Pass
    ---
    + run()
  }



  together {
    Interface PassManager {
    --属性--
      # Passes: vector
    --方法--
      + run(): PreservedAnalyses
      + addPass(): bool
    }

    note right of PassManager::Passes
      存储Pass的容器
    end note

    note right of PassManager::run
      运行注册Pass的入口
    end note

    note right of PassManager::addPass
      添加一个Pass
    end note

    class TPassManager_F<Functio> {
      PassManager<Function>
      ----
      + run(): PreservedAnalyses
    }

    class TPassManager_M<Module> {
      PassManager<Module>
      ----
      + run(): PreservedAnalyses
    }
  }

}




' **********
' 类关系
' **********

' PassManager关系
PassManager                       <|.down.                TPassManager_F
PassManager                       <|.down.                TPassManager_M

PassManager::run                  ..>                     AnalysisManager #line:red;text:red  : run方法依赖AnalysisManger
PassManager::run                  ..>                     PreservedAnalyses #line:red;text:red  : run方法依赖PreservedAnalyses
PassManager::run                  ..>                     AnalysisKey
PassManager::run                  ..>                     AnalysisSetKey


' PreservedAnalyses关系
PreservedAnalyses                 #--                     PreservedAnalysisChecker #line:lightGreen;text:lightGreen : frined


' AnalysisManager关系
AnalysisManager                   <|.down.                TAnalysisManager_F
AnalysisManager                   <|.down.                TAnalysisManager_M
AnalysisManager::registerPass     ..>                     AnalysisKey
AnalysisManager                   ..>                     AnalysisSetKey

' PassInfoMixin关系
PassInfoMixin                     <|-down-                TPassInfoMixin
PassInfoMixin                     <|-down-                PassManager

' AnalysisInfoMixin关系
TPassInfoMixin                    <|-down-                TAnalysisInfoMixin

' **********
' 注释
' **********
note "LLVM的New PM所有Pass的基类" as note_PassInfoMixin

' note "LLVM中存储Pass的容器" as note_passmanager_passes

' note "LLVM中新Pass Manager执行Pass的入口" as note_passmanager_run

note "运行Pass的入口函数" as note_passinstrumentation_run


' **********
' 注释
' **********
PassInfoMixin                   .up.                    note_PassInfoMixin

' PassManager::Passes             ...                  note_passmanager_passes

' PassManager::run                ...                  note_passmanager_run

TAnalysisInfoMixin::run              .left.                     note_passinstrumentation_run

@enduml